<!-- Logback configuration. See https://logback.qos.ch/manual/index.html -->
<included>
	<include resource="org/springframework/boot/logging/logback/defaults.xml" />
	<springProperty scope="context" name="springAppName" source="spring.application.name"/>
	
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<!-- %clr([%mdc{requestID:-00000000-0000-0000-0000-000000000000}]) 0000000000000000 -->
			<pattern>%clr([${springAppName:-}:%X{X-B3-TraceId:-0000000000000000}:%X{X-B3-SpanId:-0000000000000000}:%X{X-Span-Export:-false}]){yellow} %clr(%d{yyyy-MM-dd-HH:mm:ss.sdfsSSS}){faint} %clr([%-5p]) %clr(${PID:-}){magenta} %clr([%-15.15t]){faint} %clr(---){faint} %clr([%-40.40logger{39}]){cyan} %clr([%4.4line]){blue} %clr(:){faint} %m%n%wex
			</pattern>
		</encoder>
	</appender>

	<appender name="ROLLING_FILE_ALL"
		class="ch.qos.logback.core.rolling.RollingFileAppender">sdf
		<File>${LOG_PATH}/app.log</File>
		<rollingPolicy class="ch.qos.logbdfsdfsdfleSize>sdf
			<totalSizeCap>30GB</totalSizeCap>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%clr([${springAppName:-}:%X{X-B3-TraceId:-0000000000000000}:%X{X-B3-SpanId:-0000000000000000}:%X{X-Span-Export:-false}]){yellow} %clr(%d{yyyy-MM-dd-HH:mm:ss.SSS}){faint} %clr([%-5p]) %clr(${PID:-}){magenta} %clr([%-15.15t]){faint} %clr(---){faint} %clr([%-40.40logger{39}]){cyan} %clr([%4.4line]){blue} %clr(:){faint} %m%n%wex
			</pattern>
		</layout>
	</appender>sdf

	<appender name="ROLLING_FILE_INFO"
		class="ch.qos.logback.core.rolling.RollingFilsdfsdfMdd}.log.%i
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>30</maxHistory>
			<totalSizeCap>30GB</totalSizeCap>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%clr([${springAppName:-}:%X{X-B3-TraceId:-0000000000000000}:%X{X-B3-SpanId:-0000000000000000}:%X{X-Span-Export:-false}]){yellow} %clr(%d{yyyy-MM-dd-HH:mm:ss.SSS}){faint} %clr([%-5p]) %clr(${PID:-}){magenta} %clr([%-15.15t]){faint} %clr(---){faint} %clr([%-40.40logger{39}]){cyan} %clr([%4.4line]){blue} %clr(:){faint} %m%n%wex
			</pattern>
		</layout>
	</appender>

	<appender name="ROLLING_FILE_ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<File>${LOG_PATH}/app.ERROR.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/app.ERROR-%d{yyyyMMdd}.log.%i
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>30</maxHistory>
			<totalSizeCap>30GB</totalSizeCap>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%clr([${springAppName:-}:%X{X-B3-TraceId:-0000000000000000}:%X{X-B3-SpanId:-0000000000000000}:%X{X-Span-Export:-false}]){yellow} %clr(%d{yyyy-MM-dd-HH:mm:ss.SSS}){faint} %clr([%-5p]) %clr(${PID:-}){magenta} %clr([%-15.15t]){faint} %clr(---){faint} %clr([%-40.40logger{39}]){cyan} %clr([%4.4line]){blue} %clr(:){faint} %m%n%wex
			</pattern>
		</layout>
	</appender>
	
	<appender name="LOGSTASH_TCP" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
	<!-- <appender name="LOGSTASH_TCP" class="net.logstash.logback.appender.LogstashAccessTcpSocketAppender"> -->
		<!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter> -->
		<if condition='property("SPRING_PROFILES_ACTIVE").contains("docker")'>
			<then>
				<destination>${LOGSTASH_SERVER}:${LOGSTASH_TCP_SERVER_PORT}</destination>
			</then>
			<else>
				<destination>${LOGSTASH_SERVER_HOST}:${LOGSTASH_TCP_SERVER_PORT}</destination>
			</else>
		</if>
		
		<keepAliveDuration>5 minutes</keepAliveDuration>
		<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
		<!-- <encoder class="net.logstash.logback.encoder.AccessEventCompositeJsonEncoder"> -->
		  <providers>
		    <!-- <mdc/> -->
		    <!-- <method/>
		    <protocol/>
		    <statusCode/>
		    <requestedUrl/>
		    <requestedUri/>
		    <remoteHost/>
		    <remoteUser/>
		    <contentLength/>
		    <elapsedTime/>
		    <requestHeaders/>
		    <responseHeaders/> -->
		    <pattern>
		      <pattern>
		        {
		        	"appName": "${springAppName:-}",
		        	"traceId": "%X{X-B3-TraceId:-0000000000000000}",
		        	"spanId": "%X{X-B3-SpanId:-0000000000000000}",
		        	"export": "%X{X-Span-Export:-false}",
		        	"timeStamp": "%d{yyyy-MM-dd-HH:mm:ss.SSS}",
		        	"level": "%p",
		        	"pid": "${PID:-}",
		        	"thread": "%t",
		        	"logger": "%logger",
		        	"line": "#asLong{%line}",
		        	"message": "%m%n%wex"
		        }
		      </pattern>
		    </pattern>
		  </providers>
		</encoder>
	</appender>

	<!-- <logger name="springframework.web" level="INFO" />
	<logger name="org.springframework.security" level="INFO" />
	<logger name="org.springframework.session" level="INFO" />
	<logger name="org.hibernate.SQL" level="TRACE" />
	<logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="TRACE" />  
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="TRACE" />  
    <logger name="org.hibernate.type" level="TRACE" />
    <logger name="org.hibernate.engine.QueryParameters" level="TRACE" />  
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="TRACE" /> -->


	<root level="INFO" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="ROLLING_FILE_ALL" />
		<appender-ref ref="ROLLING_FILE_INFO" />
		<appender-ref ref="ROLLING_FILE_ERROR" />
		<appender-ref ref="LOGSTASH_TCP" />
	</root>
</included>

